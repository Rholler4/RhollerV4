rpicam-vid -t 0 --inline --listen -o tcp://0.0.0.0:5005
tcp/h264://192.168.0.101:5005

RASPI5:
H264 codec issues. Can't find the codec???
Streaming in mjpeg instead...

https://www.raspberrypi.com/documentation/accessories/camera.html
https://www.raspberrypi.com/documentation/computers/camera_software.html


rpicam-vid -t 0 --codec mjpeg --inline --listen -o tcp://0.0.0.0:5005
tcp/mjpeg://192.168.0.153:5005

3/24/2024: After streaming for some time, stream froze, SSH crashed,
pi wouldn't respond to pings. On reboot, could not ping or ssh
pi did however show up in router wireless connection list.

rpicam-vid --width 1920 --height 1080 -t 0 --codec mjpeg --inline --listen -o tcp://0.0.0.0:5005
This streamed fine for a little while, but appears to have been bogged down over time
Got slower and choppier.

Reran after letting sit a couple minutes ran fine until
at frame #3827 the stream got choppy again. Not sure why.

Attempted to run at 1280x720, still choppy. Ran screen_test.py seconds later
reran 1280x720, was smooth. ???


rpicam-vid --width 3840 --height 2160 -t 0 --codec mjpeg --inline --listen -o tcp://0.0.0.0:5005

Ran at 3840x2160 and was 1.4sec delay and no choppiness through entire test (6536 frames)
Understand choppy was probably from walking laptop away to kitchen.
I think TCP is screwing with me as it REQUIRES transmission success

STREAM USAGE 1 CAMERA TEST
Streaming basically unmoving living room
READINGS from HTOP (load average listed over 1 min):
Keep load average below the number of cores.
CPU usage exceeds 100% only because the load is across multiple cores.

640x480 30fps
Load average: 0.22

1920x1080 30fps
Load average: 0.35-0.42 (0.67 waving arms on couch)

3840x2160 *15fps*
Load average: 0.58 - 0.68

3840x2160 30fps
Load average: 1.13 - 1.35

No choppiness through test.

Think the choppiness is from TCP retransmissions

FFmpeg: ffplay udp SUCCESS!!!!
rpicam-vid --width 3840 --height 2160 --framerate 30 -t 0 --codec mjpeg --inline -o udp://192.168.0.189:54322
ffplay udp://192.168.0.189:54322 -fflags nobuffer -flags low_delay -framedrop
SHOULD BE ffplay udp://192.168.0.153:54322 but it still worked! What the hell?

had to install ffmpeg and requires some resizing of the window but this works!!

Testing:

Delay gets HARSH. vq (video queue) fills because stream is 30fps and playback is 25fps.
Set stream to 25fps and you're set.
WRONG! Stream set to 25fps gives something like 25.01-25.02. This WILL eventually fill the vq and cause lag.
Weird quirk, if starting ffplay BEFORE stream, vq stays at zero for a little.

Set stream to 24 fps while ffplay was defaulted to 25. Thought it resolved it, I was wrong.
Seems to be more dependent on the fact that streams are started AFTER ffplay.
When vq is 0, delay is almost non-existent

SOLUTION!: Set video to play at double speed specifically by SKIPPING frames to reach that playback speed.
Add -vf "setpts=0.5*PTS" to command to make:
ffplay udp://192.168.0.189:54322 -fflags nobuffer -flags low_delay -framedrop -vf "setpts=0.5*PTS"
Keep in mind, this still locks you to 25fps or whatever ffplay chooses, BUT it will eat up vq at double speed until
all gone.
Considering a faster playback speed to eat vq faster.
Also removed -framedrop since I believe that is just for audio sync?
FINAL COMMANDS 3/25/24:
Rpi terminal:
rpicam-vid --width 2560 --height 1440 --framerate 25 -t 0 --codec mjpeg --inline -o udp://192.168.0.189:54322

RAN THESE SEPARATE with linux Screens
rpicam-vid --width 2560 --height 1440 --framerate 25 -t 0 --codec mjpeg --inline --camera 0 -o udp://192.168.0.189:54322
rpicam-vid --width 2560 --height 1440 --framerate 25 -t 0 --codec mjpeg --inline --camera 1 -o udp://192.168.0.189:54323


Windows CMD:
ffplay udp://192.168.0.199:54322 -fflags nobuffer -flags low_delay -vf "setpts=0.25*PTS"
ffplay udp://192.168.0.199:54323 -fflags nobuffer -flags low_delay -vf "setpts=0.25*PTS"

RESOURCE USAGE WITH ffplay:

1920x1080 25fps
Load average: 0.56-0.68

2560x1440 25fps
Load average: 0.59-0.66

BOTH STREAMS at 2560x1440:
Load average: 1.24-1.36

rpicam-vid --width 1920 --height 1080 --framerate 25 -t 0 --codec mjpeg --inline --camera 0 -o udp://192.168.0.196:54322
rpicam-vid --width 1920 --height 1080 --framerate 25 -t 0 --codec mjpeg --inline --camera 1 -o udp://192.168.0.196:54323